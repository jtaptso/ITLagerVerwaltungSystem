@page "/login"
@inject AuthService AuthService
@inject ApiAuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Password</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>
    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        var token = await AuthService.LoginAsync(loginModel.Email, loginModel.Password);
        if (!string.IsNullOrEmpty(token))
        {
            AuthStateProvider.SetToken(token);
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid login attempt.";
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
