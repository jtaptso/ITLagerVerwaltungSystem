// <auto-generated />
using System;
using ITLagerVerwaltungSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITLagerVerwaltungSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("PicturePaths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.MovementLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("MovementType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("UserId");

                    b.ToTable("MovementLogs");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Material", b =>
                {
                    b.HasOne("ITLagerVerwaltungSystem.Core.Domain.Order", "Order")
                        .WithMany("Materials")
                        .HasForeignKey("OrderId");

                    b.OwnsOne("ITLagerVerwaltungSystem.Core.Domain.Condition", "Condition", b1 =>
                        {
                            b1.Property<int>("MaterialId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MaterialId");

                            b1.ToTable("Materials");

                            b1.WithOwner()
                                .HasForeignKey("MaterialId");
                        });

                    b.OwnsOne("ITLagerVerwaltungSystem.Core.Domain.MaterialType", "MaterialType", b1 =>
                        {
                            b1.Property<int>("MaterialId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MaterialId");

                            b1.ToTable("Materials");

                            b1.WithOwner()
                                .HasForeignKey("MaterialId");
                        });

                    b.OwnsOne("ITLagerVerwaltungSystem.Core.Domain.SerialNumber", "SerialNumber", b1 =>
                        {
                            b1.Property<int>("MaterialId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MaterialId");

                            b1.ToTable("Materials");

                            b1.WithOwner()
                                .HasForeignKey("MaterialId");
                        });

                    b.Navigation("Condition");

                    b.Navigation("MaterialType");

                    b.Navigation("Order");

                    b.Navigation("SerialNumber");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.MovementLog", b =>
                {
                    b.HasOne("ITLagerVerwaltungSystem.Core.Domain.Material", "Material")
                        .WithMany("MovementLogs")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITLagerVerwaltungSystem.Core.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Notification", b =>
                {
                    b.HasOne("ITLagerVerwaltungSystem.Core.Domain.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Order", b =>
                {
                    b.HasOne("ITLagerVerwaltungSystem.Core.Domain.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Material", b =>
                {
                    b.Navigation("MovementLogs");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.Order", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("ITLagerVerwaltungSystem.Core.Domain.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
